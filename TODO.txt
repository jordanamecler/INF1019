1) adicionar cada 'prcesso' lido pelo interpretador no escalonador.
   o interpretador tem que avisar o escalonador que tipo de processo é aquele,
   RR, prioridade ou loteria, podemos criar um struct processo q tem o pid ou path do processo 
   e um campo pra dizer qual o modo q ele deve executar pq vamos fazer tudo no mesmo escalonador.

2) o interpretador vai ler o exec.txt de 3 em 3 segundos entao temos q colocar um sleep(3) no while.

3) Depois precisamos implementar cada jeito de escalonar. O inserePID do escalonador vai receber
   path e modo e ali vamos ter que colocar o 'processo' (struct processo talvez) na lista de acordo
   as regras e dps mandar execut-lo. precisamos de uma funcao pro escalonador que vai inserir ordenado
   e a nossa lista precisa deixar isso, nao deve ser uma fila tradicional só com pop e push pq nao daria.

4) cada processo é um fork/exec com o path do programa compilado já pro exec funcionar. temos que fazer
   alguns exemplos pra testar.

5) temos q fazer exemplos de entrada.txt e um saida.txt. o saida.txt é um item q será avaliado, entao temos
   que mostrar exatamente que itens estao sendo executados neles. já que uma parte é cpu-bound e a outra io-bound
   podemos imprmir tanto no saida.txt quanto no terminal o nome do programa q esta rodando e hora:minuto de cada um
   para termos ideia de quem rodou primeiro.

hierarquia de prioridade:

Prioridade 1 >> Prioridade 7 >> ROUND-ROBIN >> LOTTERY